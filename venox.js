const VenoX=function(){return VenoX.mID=Math.random().toString(36).substring(7),VenoX.VXX={},arrayModule=function(){webpackChunkbuild.push([[VenoX.mID],{},function(e){Object.keys(e.m).forEach((function(mod){VenoX.VXX[mod]=e(mod)}))}])},arrayModule(),get=function get(id){return VenoX.VXX[id]},searchModule=function searchModule(query){return results=[],modules=Object.keys(VenoX.VXX),modules.forEach((function(mKey){if(mod=VenoX.VXX[mKey],"undefined"!=typeof mod)if("string"==typeof query){if("object"==typeof mod.default)for(key in mod.default)key==query&&results.push(mod);for(key in mod)key==query&&results.push(mod)}else{if("function"!=typeof query)throw new TypeError("searchModule only finds string, "+typeof query+" provided");query(mod)&&results.push(mod)}})),results},{modules:VenoX.VXX,constructors:VenoX.ANN,searchModule:searchModule,get:get}};"object"==typeof module&&module.exports?module.exports=VenoX:window.mR=Venox();